/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Data.*;
import java.awt.Dimension;
import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Antonio
 */
public class Actualizador extends javax.swing.JFrame {

        Contenedor liga = new Contenedor();
        ArrayList<ArchivosStt> estadisticas = new ArrayList();

        /**
         * Creates new form Actualizador
         */
        public Actualizador() throws IOException {
                initComponents();
                jLog.setText("");
                try {
                        liga.cargarDatos();
                        FileReader stats = new FileReader("stats.dir");
                        BufferedReader bR = new BufferedReader(stats);
                        String s;
                        while ((s = bR.readLine()) != null) {
                                FileReader archivo = new FileReader(s);
                                BufferedReader bArchivo = new BufferedReader(archivo);
                                estadisticas.add(new ArchivosStt(bArchivo, liga));
                        }
                } catch (Exception ex) {
                        new JOptionPane(ex.getMessage()).setVisible(true);
                }
                this.setSize(new Dimension(700, 500));
                this.setLocationRelativeTo(null);
        }

        /**
         * This method is called from within the constructor to
         * initialize the form. WARNING: Do NOT modify this code. The
         * content of this method is always regenerated by the Form
         * Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {
                java.awt.GridBagConstraints gridBagConstraints;

                jPanel1 = new javax.swing.JPanel();
                jButton1 = new javax.swing.JButton();
                jScrollPane2 = new javax.swing.JScrollPane();
                jLog = new javax.swing.JTextArea();
                jSeparator1 = new javax.swing.JSeparator();
                jSeparator2 = new javax.swing.JSeparator();
                jSeparator3 = new javax.swing.JSeparator();
                jSeparator4 = new javax.swing.JSeparator();
                fitPorteros = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                jPanel1.setLayout(new java.awt.GridBagLayout());

                jButton1.setText("Actualizar Liga");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridwidth = 10;
                gridBagConstraints.weightx = 0.1;
                gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
                jPanel1.add(jButton1, gridBagConstraints);

                jLog.setColumns(20);
                jLog.setRows(5);
                jScrollPane2.setViewportView(jLog);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 3;
                gridBagConstraints.gridwidth = 11;
                gridBagConstraints.gridheight = 8;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.3;
                gridBagConstraints.weighty = 2.0;
                jPanel1.add(jScrollPane2, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridwidth = 13;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weighty = 0.3;
                jPanel1.add(jSeparator1, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridheight = 10;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 0.1;
                jPanel1.add(jSeparator2, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 12;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridheight = 10;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 0.1;
                jPanel1.add(jSeparator3, gridBagConstraints);
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 11;
                gridBagConstraints.gridwidth = 13;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weighty = 0.2;
                jPanel1.add(jSeparator4, gridBagConstraints);

                fitPorteros.setText("Fit a 100 (porteros)");
                fitPorteros.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fitPorterosActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 4;
                gridBagConstraints.gridy = 2;
                gridBagConstraints.gridwidth = 5;
                gridBagConstraints.weightx = 0.1;
                gridBagConstraints.insets = new java.awt.Insets(2, 0, 5, 0);
                jPanel1.add(fitPorteros, gridBagConstraints);

                getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                FileWriter subidas = null;
                FileReader reports = null;
                try {
                        reports = new FileReader("reports.txt");
                        BufferedReader bR = new BufferedReader(reports);
                        subidas = new FileWriter("resumen.txt", true);
                        BufferedWriter bW = new BufferedWriter(subidas);
                        PrintWriter pW = new PrintWriter(bW);
                        String[] sancionesYLesiones = new String[2];
                        sancionesYLesiones[0] = "";
                        sancionesYLesiones[1] = "";
                        String sLog = jLog.getText();
                        pW.println("[spoiler=\"ESTADISTICAS\"]<pre>");
                        String s = "";
                        pW.println("[b]RESULTADOS DE LA JORNADA[/b]");
                        pW.println();
                        while ((s = bR.readLine()) != null) {
                                pW.println(s);
                        }
                        pW.println();
                        s = "";
                        for (ArchivosStt a : estadisticas) {
                                s += a.escribirSkillsch(a.jLocal, a.local);
                                sLog += "Actualizadas medias y experiencias: " + a.local.getAbrev() + ".txt\n";
                                s += a.escribirSkillsch(a.jVisitante, a.visitante);
                                sLog += "Actualizadas medias y experiencias: " + a.visitante.getAbrev() + ".txt\n";
                                jLog.setText(sLog);
                        }
                        String[] cadena = s.split("\n");
                        s = "";
                        for (ArchivosStt a : estadisticas) {
                                try {
                                        a.actualizarBase(25, liga, a.local, a.jLocal);
                                        sLog += "Actualizadas estadisticas y fit: " + a.local.getAbrev() + ".txt\n";
                                        a.actualizarBase(25, liga, a.visitante, a.jVisitante);
                                        sLog += "Actualizadas estadisticas y fit: " + a.visitante.getAbrev() + ".txt\n";
                                        jLog.setText(sLog);
                                } catch (IOException ex) {
                                        jLog.setText("Error al actualizar las estadísticas: " + ex.getMessage());
                                }
                        }
                        pW.println();
                        pW.println("[b]MEDIAS[/b]");
                        pW.println();
                        for (int i = 0; i < cadena.length; i++) {
                                pW.println(cadena[i]);
                        }
                        pW.println();
                        pW.println("[b]LESIONES[/b]");
                        pW.println();
                        for (ArchivosStt a : estadisticas) {
                                sancionesYLesiones = a.escribirLesiones(a.local, a.jLocal, sancionesYLesiones);
                                sLog += "Actualizadas lesiones: " + a.local.getAbrev() + ".txt\n";
                                sancionesYLesiones = a.escribirLesiones(a.visitante, a.jVisitante, sancionesYLesiones);
                                sLog += "Actualizadas lesiones:  " + a.visitante.getAbrev() + ".txt\n";
                                jLog.setText(sLog);
                        }
                        s = sancionesYLesiones[0] + sancionesYLesiones[1];
                        cadena = s.split("\n");
                        for (int i = 0; i < cadena.length; i++) {
                                pW.println(cadena[i]);
                        }
                        pW.println();
                        sancionesYLesiones[0] = "";
                        sancionesYLesiones[1] = "";
                        s = "";
                        pW.println("[b]SANCIONES[/b]");
                        pW.println();
                        for (ArchivosStt a : estadisticas) {
                                sancionesYLesiones = a.escribirSanciones(a.local, a.jLocal, sancionesYLesiones);
                                sLog += "Actualizada s sanciones: " + a.local.getAbrev() + ".txt\n";
                                sancionesYLesiones = a.escribirSanciones(a.visitante, a.jVisitante, sancionesYLesiones);
                                sLog += "Actualizadas sanciones:  " + a.visitante.getAbrev() + ".txt\n";
                                jLog.setText(sLog);
                        }
                        s = sancionesYLesiones[0] + sancionesYLesiones[1];
                        cadena = s.split("\n");
                        for (int i = 0; i < cadena.length; i++) {
                                pW.println(cadena[i]);
                        }
                        pW.println("</pre>[/spoiler]");
                        pW.println();
                        pW.close();
                        try {
                                liga.guardarEquipos();
                                sLog += "\n\n\n\n\n\nTODO ACTUALIZADO CORRECTAMENTE";
                                jLog.setText(sLog);
                        } catch (IOException ex) {
                                jLog.setText("Error, no se pudieron actualizar las plantillas: " + ex.getMessage());
                        }

                } catch (IOException ex) {
                        new JOptionPane(ex.getMessage()).setVisible(true);
                }
        }//GEN-LAST:event_jButton1ActionPerformed

        private void fitPorterosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fitPorterosActionPerformed
                for (Equipo e : liga.getEquipos()) {
                        for (Jugador j : e.getRoster()) {
                                if (j.getPosicion().equals(Jugador.Posicion.gk)) {
                                        j.getStats().setFit(100);
                                }
                        }
                }
                try {
                        liga.guardarEquipos();
                        jLog.setText("Fit de los porteros puesto a 100");
                } catch (IOException ex) {
                        jLog.setText("Error, no se pudieron actualizar las plantillas: " + ex.getMessage());
                }
        }//GEN-LAST:event_fitPorterosActionPerformed

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(Actualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(Actualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(Actualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(Actualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                try {
                                        new Actualizador().setVisible(true);
                                } catch (IOException ex) {
                                        System.out.println("Error");
                                }
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton fitPorteros;
        private javax.swing.JButton jButton1;
        private javax.swing.JTextArea jLog;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JSeparator jSeparator1;
        private javax.swing.JSeparator jSeparator2;
        private javax.swing.JSeparator jSeparator3;
        private javax.swing.JSeparator jSeparator4;
        // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Antonio
 */
public class AlineacionAlAzar extends javax.swing.JFrame {
    ArrayList <Jugador> equipo = new ArrayList();
    ArrayList <String> tactica = new ArrayList();
    
    /**
     * Creates new form AlineacionAlAzar
     */
    public AlineacionAlAzar() throws FileNotFoundException, IOException {
        initComponents();
        tactica.add("A");
        tactica.add("C");
        tactica.add("E");
        tactica.add("P");
        tactica.add("D");
        tactica.add("L");
        tactica.add("N");
        FileReader equipos = new FileReader ("teams.dir");
        BufferedReader bR = new BufferedReader (equipos);
        String s;
        while ((s = bR.readLine()) != null){
            jEquipos.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jEquipos = new javax.swing.JComboBox<>();
        jAlineacionAlAzar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEquiposActionPerformed(evt);
            }
        });
        jPanel1.add(jEquipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 130, -1));

        jAlineacionAlAzar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jAlineacionAlAzar.setText("Crear Alineacion");
        jAlineacionAlAzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAlineacionAlAzarActionPerformed(evt);
            }
        });
        jPanel1.add(jAlineacionAlAzar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 130, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEquiposActionPerformed
        String equipo = jEquipos.getSelectedItem().toString();
        this.equipo = new ArrayList();
        try {
            FileReader fichero = new FileReader (equipo);
            BufferedReader bR = new BufferedReader (fichero);
            bR.readLine();
            bR.readLine();
            String jugador;
            while ((jugador = bR.readLine())!= null){
                Jugador j = new Jugador (new StringBuilder(jugador), equipo);
                this.equipo.add(j);
            }
            bR.close();
        } catch (FileNotFoundException ex) {
            System.out.println("Error");
        } catch (IOException ex) {
            System.out.println("Error 2");
        }
    }//GEN-LAST:event_jEquiposActionPerformed

    private void jAlineacionAlAzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAlineacionAlAzarActionPerformed
        String t = tactica.get(0);
        String abrev = jEquipos.getSelectedItem().toString().substring(0, 3);
        ArrayList<Jugador> portero = new ArrayList(), defensa = new ArrayList(), dm = new ArrayList(), medio = new ArrayList(), am = new ArrayList(), delantero = new ArrayList();
        for (Jugador j: this.equipo){
            if (j.estaDisponible()){
                switch(j.getPosInt()){
                    case 1:
                        portero.add(new Jugador (j));
                    break;
                    case 2:
                        defensa.add(new Jugador (j));
                    break;
                    case 3:
                        dm.add(new Jugador (j));
                    break;
                    case 4:
                        medio.add(new Jugador (j));
                    break;
                    case 5:
                        am.add(new Jugador (j));
                    break;
                    case 6:
                        delantero.add(new Jugador (j));
                    break;
                }
            }
        }
        int nDefensa, nDM, nMedio, nMF, nAM, nDelantero;
        do{
            Collections.shuffle(tactica);
            t = tactica.get(0);
            nDefensa = (int) (Math.random()*3+3);
            nDM = (int) (Math.random()*3);
            nMF = (int) (Math.random()*3+1);
            nAM = (int) (Math.random()*3);
            nDelantero = (int) (Math.random()*3+1);
            nMedio = nMF + nAM + nDM;
            
        }while(((nDefensa + nDM + nMF + nAM + nDelantero) != 10) || ((nMedio < 2)||(nMedio > 8)) || (nDefensa > defensa.size())
                || (nDM > dm.size())|| (nMF > medio.size())|| (nAM > am.size())|| (nDelantero > delantero.size()));
        String [] defensaAli = new String [nDefensa], dmAli = new String [nDM], medioAli = new String [nMF], amAli = new String [nAM], delanteroAli = new String [nDelantero];
        String porteroAli = "";
        int i = 0;
        Iterator it;
        if (portero.size() > 0){
            it = portero.iterator();
            while ((it.hasNext()) && i<1){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    porteroAli = j.getNombre();
                    i++;
                }
                portero.remove(j);
            }
        }else porteroAli = null;
        i = 0;
        if (nDefensa>0){
            it = defensa.iterator();
            ArrayList<Jugador> eliminar = new ArrayList();
            while ((it.hasNext()) && i<nDefensa){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    defensaAli[i] = j.getNombre();
                    i++;
                }
                eliminar.add(j);
            }
            for (Jugador j: eliminar){
                defensa.remove(j);
            }
            if (i < nDefensa-1){
                for (int j = i; j<nDefensa; j++){
                    defensaAli[j] = null;
                }
            }
        }
        i = 0;
        if (nDM > 0){
            ArrayList<Jugador> eliminar = new ArrayList();
            it = dm.iterator();
            while ((it.hasNext()) && i<nDM){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    dmAli[i] = j.getNombre();
                    i++;
                }
                eliminar.add(j);
            }
            for (Jugador j: eliminar){
                dm.remove(j);
            }
            if (i < nDM-1){
                for (int j = i; j<nDM; j++){
                    dmAli[j] = null;
                }
            }    
        }
        i = 0;
        if (nMF > 0){
            it = medio.iterator();
            ArrayList<Jugador> eliminar = new ArrayList();
            while ((it.hasNext()) && i<nMF){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    medioAli[i] = j.getNombre();
                    i++;
                }
                eliminar.add(j);
            }
            for (Jugador j: eliminar){
                medio.remove(j);
            }
            if (i < nMF-1){
                for (int j = i; j<nMF; j++){
                    medioAli[j] = null;
                }
            }
        }
        i = 0;
        if (nAM > 0){
            it = am.iterator();
            ArrayList<Jugador> eliminar = new ArrayList();
            while ((it.hasNext()) && i<nAM){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    amAli[i] = j.getNombre();
                    i++;
                }
                eliminar.add(j);
            }
            for (Jugador j: eliminar){
                am.remove(j);
            }
            if (i < nAM-1){
                for (int j = i; j<nAM; j++){
                    amAli[j] = null;
                }
            }
        }
        i = 0;
        if (nDelantero > 0){
            it = delantero.iterator();
            ArrayList<Jugador> eliminar = new ArrayList();
            while ((it.hasNext()) && i<nDelantero){
                Jugador j = (Jugador) it.next();
                if (j.estaDisponible()){
                    delanteroAli[i] = j.getNombre();
                    i++;
                }
                eliminar.add(j);
            }
            for (Jugador j: eliminar){
                delantero.remove(j);
            }
            if (i < nDelantero-1){
                for (int j = i; j<nDelantero; j++){
                    delanteroAli[j] = null;
                }
            }
        }
        String [] suplentes = new String [5];
        
        if (!portero.isEmpty()) {
            suplentes[0] = "GK " + portero.get(0).getNombre();
            portero.remove(portero.get(0));
        }
        else if (defensa.size()>0){
            suplentes[0] = "GK " + defensa.get(0).getNombre();
            defensa.remove(defensa.get(0));
        }else if (dm.size()>0){
            suplentes[0] = "GK " + dm.get(0).getNombre();
            dm.remove(dm.get(0));
        }else if (medio.size()>0){
            suplentes[0] = "GK " + medio.get(0).getNombre();
            medio.remove(medio.get(0));
        }else if (am.size()>0){
            suplentes[0] = "GK " + am.get(0).getNombre();
            am.remove(am.get(0));
        }else if (delantero.size()>0){
            suplentes[0] = "GK " + delantero.get(0).getNombre();
            delantero.remove(delantero.get(0));
        }else suplentes[0] = "GK ";
        
        if (!defensa.isEmpty()){
            suplentes[1] = "DF " + defensa.get(0).getNombre();
            defensa.remove(defensa.get(0));
        }else if (dm.size()>0){
            suplentes[1] = "DF " + dm.get(0).getNombre();
            dm.remove(dm.get(0));
        }else if (medio.size()>0){
            suplentes[1] = "DF " + medio.get(0).getNombre();
            medio.remove(medio.get(0));
        }else if (am.size()>0){
            suplentes[1] = "DF " + am.get(0).getNombre();
            am.remove(am.get(0));
        }else if (delantero.size()>0){
            suplentes[1] = "DF " + delantero.get(0).getNombre();
            delantero.remove(delantero.get(0));
        }else if (portero.size()>0){
            suplentes[1] = "DF " + portero.get(0).getNombre();
            portero.remove(portero.get(0));
        }else suplentes[1] = "DF ";
        
        if (nDM > 0 && !dm.isEmpty()){
            suplentes[2] = "DM " + dm.get(0).getNombre();
            dm.remove(dm.get(0));
            if (nAM > 0 && !am.isEmpty()){
                
                suplentes[3] = "AM " + am.get(0).getNombre();
                am.remove(am.get(0));
            }else{
                if (medio.size()>0){
                    suplentes[3] = "MF " + medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (defensa.size()>0){
                    suplentes[3] = suplentes[2];
                    suplentes[2] = "DF " + defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (delantero.size()>0){
                    suplentes[3] = "FW " + delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    suplentes[3] = "MF " + portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }else suplentes[3] = "MF ";
                
            }
        }else{
            if (nAM > 0 && !am.isEmpty()){
                if (medio.size()>0){
                    suplentes[2] = "MF " + medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                    suplentes[3] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (dm.size()>0){
                    suplentes[2] = "DM " + dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                    suplentes[3] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (defensa.size()>0){
                    suplentes[2] = "DF " + defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                    suplentes[3] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (delantero.size()>0){
                    suplentes[2] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                    suplentes[3] = "FW " + delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    suplentes[2] = "MF " + portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                    suplentes[3] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else{
                    suplentes[2] = "MF ";
                    suplentes[3] = "AM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }
            }else{
                if (defensa.size()>0){
                    suplentes[2] = "DF " + defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (dm.size()>0){
                    suplentes[2] = "DM " + dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (medio.size()>0){
                    suplentes[2] = "MF " + medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (am.size()>0){
                    suplentes[2] = "DM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (delantero.size()>0){
                    suplentes[2] = "FW " + delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    suplentes[2] = "DM " + portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }else suplentes[2] = "DM ";
                
                if (defensa.size()>0){
                    suplentes[3] = "DF " + defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (dm.size()>0){
                    suplentes[3] = "DM " + dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (medio.size()>0){
                    suplentes[3] = "MF " + medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (am.size()>0){
                    suplentes[3] = "DM " + am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (delantero.size()>0){
                    suplentes[3] = "FW " + delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    suplentes[3] = "DM " + portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }else suplentes[3] = "MF ";
            }
        }
        
        if (!delantero.isEmpty()){
            suplentes[4] = "FW " + delantero.get(0).getNombre();
            delantero.remove(delantero.get(0));
        }else if (am.size()>0){
            suplentes[4] = "FW " + am.get(0).getNombre();
            am.remove(am.get(0));
        }else if (medio.size()>0){
            suplentes[4] = "FW " + medio.get(0).getNombre();
            medio.remove(medio.get(0));
        }else if (dm.size()>0){
            suplentes[4] = "FW " + dm.get(0).getNombre();
            dm.remove(dm.get(0));
        }else if (defensa.size()>0){
            suplentes[4] = "FW " + defensa.get(0).getNombre();
            defensa.remove(defensa.get(0));
        }else if (portero.size()>0){
            suplentes[4] = "FW " + portero.get(0).getNombre();
            portero.remove(portero.get(0));
        }else suplentes[4] = "FW ";
        
        if (porteroAli == null){
            if (defensa.size()>0){
                porteroAli = defensa.get(0).getNombre();
                defensa.remove(defensa.get(0));
            }else if (dm.size()>0){
                porteroAli = dm.get(0).getNombre();
                dm.remove(dm.get(0));
            }else if (medio.size()>0){
                porteroAli = medio.get(0).getNombre();
                medio.remove(medio.get(0));
            }else if (am.size()>0){
                porteroAli = am.get(0).getNombre();
                am.remove(am.get(0));
            }else if (delantero.size()>0){
                porteroAli = delantero.get(0).getNombre();
                delantero.remove(delantero.get(0));
            }
        }
        for (String s: defensaAli){
            if (s == null){
                if (dm.size()>0){
                    s = dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (medio.size()>0){
                    s = medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (am.size()>0){
                    s = am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (delantero.size()>0){
                    s = delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    s = portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }
            }
        }
        for (String s: dmAli){
            if (s == null){
                if (medio.size()>0){
                    s = medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (defensa.size()>0){
                    porteroAli = defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (am.size()>0){
                    s = am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (delantero.size()>0){
                    s = delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    s = portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }
            }
        }
        for (String s: medioAli){
            if (s == null){
                if (dm.size()>0){
                    s = dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (am.size()>0){
                    s = am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (defensa.size()>0){
                    porteroAli = defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (delantero.size()>0){
                    s = delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (portero.size()>0){
                    s = portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }
            }
        }
        for (String s: amAli){
            if (s == null){
                if (medio.size()>0){
                    s = medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (delantero.size()>0){
                    s = delantero.get(0).getNombre();
                    delantero.remove(delantero.get(0));
                }else if (dm.size()>0){
                    s = dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (defensa.size()>0){
                    porteroAli = defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (portero.size()>0){
                    s = portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }
            }
        }
        for (String s: delanteroAli){
            if (s == null){
                if (am.size()>0){
                    s = am.get(0).getNombre();
                    am.remove(am.get(0));
                }else if (medio.size()>0){
                    s = medio.get(0).getNombre();
                    medio.remove(medio.get(0));
                }else if (dm.size()>0){
                    s = dm.get(0).getNombre();
                    dm.remove(dm.get(0));
                }else if (defensa.size()>0){
                    porteroAli = defensa.get(0).getNombre();
                    defensa.remove(defensa.get(0));
                }else if (portero.size()>0){
                    s = portero.get(0).getNombre();
                    portero.remove(portero.get(0));
                }
            }
        }
        
        try {
            FileWriter alineacion = new FileWriter (abrev + "sht.txt");
            BufferedWriter bW = new BufferedWriter (alineacion);
            PrintWriter pW = new PrintWriter (bW);
            pW.println(abrev);
            pW.println(t);
            pW.println();
            if (porteroAli != null) pW.println("GK " + porteroAli);
            else pW.println("GK ");
            for (String s: defensaAli){
                if (s != null) pW.println("DF " + s);
                else pW.println("DF ");
            }
            for (String s: dmAli){
                if (s != null) pW.println("DM " + s);
                else pW.println("DM ");
            }
            for (String s: medioAli){
                if (s != null) pW.println("MF " + s);
                else pW.println("MF ");
            }
            for (String s: amAli){
                if (s != null) pW.println("AM " + s);
                else pW.println("AM ");
            }
            for (String s: delanteroAli){
                if (s != null) pW.println("FW " + s);
                else pW.println("DM ");
            }
            pW.println();
            for (String s: suplentes){
                pW.println(s);
            }
            pW.println();
            if (delanteroAli[0] != null) pW.println("PK: " + delanteroAli[0]);
            else pW.println("PK: ");
            pW.println();
            pW.println("SUB 2 13 DF IF MIN = 55");
            pW.println("SUB 11 16 FW IF MIN = 60");
            pW.println("SUB " + (2 + nDefensa + nDM) + " 14 MF IF MIN = 65");
            pW.close();
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_jAlineacionAlAzarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlineacionAlAzar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlineacionAlAzar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlineacionAlAzar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlineacionAlAzar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AlineacionAlAzar().setVisible(true);
                } catch (IOException ex) {
                    System.out.println("Error");
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAlineacionAlAzar;
    private javax.swing.JComboBox<String> jEquipos;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
